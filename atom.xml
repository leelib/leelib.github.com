<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>李略帅</title>
  
  <subtitle>少壮不努力，一生在内地</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.leelib.com/"/>
  <updated>2018-03-24T05:40:35.312Z</updated>
  <id>http://www.leelib.com/</id>
  
  <author>
    <name>leaker</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用pkgmgr安装telnet客户端</title>
    <link href="http://www.leelib.com/2016/05/09/pkgmgr-install-telnet.html"/>
    <id>http://www.leelib.com/2016/05/09/pkgmgr-install-telnet.html</id>
    <published>2016-05-09T04:04:44.000Z</published>
    <updated>2018-03-24T05:40:35.312Z</updated>
    
    <content type="html"><![CDATA[<p>在 Windows Vista 以上的操作系统中可以使用pkgmgr对Windows功能的快捷安装<br>比如想要安装 <em>telnet客户端</em> 时，只需在控制台里面键入以下命令并回车：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkgmgr /iu:<span class="string">"TelnetClient"</span></span><br></pre></td></tr></table></figure></p><p>等几秒钟后 telnet 命令就可以使用了<br>就这么简单 :)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在 Windows Vista 以上的操作系统中可以使用pkgmgr对Windows功能的快捷安装&lt;br&gt;比如想要安装 &lt;em&gt;telnet客户端&lt;/em&gt; 时，只需在控制台里面键入以下命令并回车：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;ta
      
    
    </summary>
    
      <category term="summarys" scheme="http://www.leelib.com/categories/summarys/"/>
    
    
  </entry>
  
  <entry>
    <title>Eclipse-ADT在Windows下添加library的BUG</title>
    <link href="http://www.leelib.com/2016/04/20/adt-add-library-bug.html"/>
    <id>http://www.leelib.com/2016/04/20/adt-add-library-bug.html</id>
    <published>2016-04-20T11:35:35.000Z</published>
    <updated>2018-03-24T05:40:35.290Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h1><p>今天在Windows里使用 Cocos-Quick 创建的项目在使用ADT往Android里面部署的时候遇到了下面的问题<br><img src="/images/20160420/adt_add_library_bug.png" alt=""></p><p>出现上图的情况是这样的操作步骤：</p><ol><li>添加 D:\Tools\Quick-Cocos2dx-Community\cocos\platform\android\java 到 Library 引用里</li><li>点击 OK</li><li>重新打开这个配置界面</li></ol><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><p>测试了许久后，无意间发现有次选错了路径后Library正常了</p><blockquote><p>当时我选择的 Quick 是 <strong> F:\Quick-Cocos2dx-Community </strong><br>选择的项目目录是 <strong> F:\Code\Cocos\QuickHello </strong></p></blockquote><p>终于发现了解决这个BUG的办法：<strong><em> 将项目和想要引用的Library放在同一个分区内 </em></strong><br>遂将项目和 Quick 放到同一个分区内后问题解决，效果如下：<br><img src="/images/20160420/adt_add_library_bug_ok.png" alt=""></p><p>引起这个错误的原因是：<strong><em> Eclipse 本身并不是给Windows 这种多分区系统定制的，本身是用来给 MAC 或者 Linux 这种以目录为结构的系统使用的 </em></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问题出现&quot;&gt;&lt;a href=&quot;#问题出现&quot; class=&quot;headerlink&quot; title=&quot;问题出现&quot;&gt;&lt;/a&gt;问题出现&lt;/h1&gt;&lt;p&gt;今天在Windows里使用 Cocos-Quick 创建的项目在使用ADT往Android里面部署的时候遇到了下面的问题&lt;b
      
    
    </summary>
    
      <category term="programing" scheme="http://www.leelib.com/categories/programing/"/>
    
    
  </entry>
  
  <entry>
    <title>Git的常用命令收集</title>
    <link href="http://www.leelib.com/2016/01/21/git.html"/>
    <id>http://www.leelib.com/2016/01/21/git.html</id>
    <published>2016-01-21T16:43:59.000Z</published>
    <updated>2018-03-24T05:40:35.307Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取最新的代码</span></span><br><span class="line">git fetch --all</span><br><span class="line"><span class="comment"># 恢复到最后一次提交，放弃本地所有修改</span></span><br><span class="line">git reset --hard</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有设置</span></span><br><span class="line">git config -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 抛弃对文件的修改</span></span><br><span class="line">git co  -- &lt;filename&gt;</span><br><span class="line"><span class="comment"># 抛弃对目录的修改</span></span><br><span class="line">git co .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从版本库中删除文件</span></span><br><span class="line">git rm &lt;filename&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 比较差异</span></span><br><span class="line">git diff</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看提交历史</span></span><br><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>本篇文章后续不定期更新</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
      <category term="git" scheme="http://www.leelib.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>类 enable_shared_from_this 的经验总结</title>
    <link href="http://www.leelib.com/2015/12/13/enable-shared-from-this.html"/>
    <id>http://www.leelib.com/2015/12/13/enable-shared-from-this.html</id>
    <published>2015-12-13T16:32:07.000Z</published>
    <updated>2018-03-24T05:40:35.297Z</updated>
    
    <content type="html"><![CDATA[<h1 id="不能再构造函数内使用-shared-from-this-函数"><a href="#不能再构造函数内使用-shared-from-this-函数" class="headerlink" title="不能再构造函数内使用 shared_from_this() 函数"></a>不能再构造函数内使用 shared_from_this() 函数</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">class_a</span> :</span> <span class="keyword">public</span> <span class="built_in">std</span>::enable_shared_from_this&lt;class_a&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    class_a(<span class="keyword">void</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        auto self(shared_from_this());// 这里会报 bad_weak_ptr 错误</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="子类无法重复继承"><a href="#子类无法重复继承" class="headerlink" title="子类无法重复继承"></a>子类无法重复继承</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">class_a</span> :</span> <span class="keyword">public</span> <span class="built_in">std</span>::enable_shared_from_this&lt;class_a&gt;</span><br><span class="line">&#123;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">class_b</span> :</span> <span class="keyword">public</span> class_a, <span class="keyword">public</span> <span class="built_in">std</span>::enable_shared_from_this&lt;class_a&gt;</span><br><span class="line">&#123;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这段代码将无法通过编译。<br>如果想返回子类的 shared_from_this 指针，则可以进行如下操作<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">class_a</span> :</span> <span class="keyword">public</span> <span class="built_in">std</span>::enable_shared_from_this&lt;class_a&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">virtual</span> ~class_a()<span class="comment">// 为了确保 dynamic_pointer_cast 可以工作，需要父类拥有虚函数。</span></span><br><span class="line">    &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">class_b</span> :</span> <span class="keyword">public</span> class_a</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">shared_ptr</span>&lt;class_b&gt; shared_from_this(<span class="keyword">void</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">std</span>::dynamic_pointer_cast&lt;class_b&gt;(class_a::shared_from_this());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p><strong>通常来说如果定义一个类时，如果这个类可能被继承使用时，将这个类的析构函数定义为虚函数来确保析构的调用顺序</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;不能再构造函数内使用-shared-from-this-函数&quot;&gt;&lt;a href=&quot;#不能再构造函数内使用-shared-from-this-函数&quot; class=&quot;headerlink&quot; title=&quot;不能再构造函数内使用 shared_from_this() 函数
      
    
    </summary>
    
      <category term="programing" scheme="http://www.leelib.com/categories/programing/"/>
    
    
      <category term="c++" scheme="http://www.leelib.com/tags/c/"/>
    
      <category term="enable_shared_from_this" scheme="http://www.leelib.com/tags/enable-shared-from-this/"/>
    
      <category term="shared_ptr" scheme="http://www.leelib.com/tags/shared-ptr/"/>
    
  </entry>
  
  <entry>
    <title>Windows10 下 boost::asio::serial_port 的 BUG</title>
    <link href="http://www.leelib.com/2015/10/10/win10-boost-asio-serial-port-bug.html"/>
    <id>http://www.leelib.com/2015/10/10/win10-boost-asio-serial-port-bug.html</id>
    <published>2015-10-10T08:49:44.000Z</published>
    <updated>2018-03-24T05:40:35.322Z</updated>
    
    <content type="html"><![CDATA[<p>在最近写一些串口操作的程序时使用了 <strong>boost::asio::serial_port</strong> 来操作串口<br>但当尝试打开串口的时候出现了错误。下面是我的测试代码：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">boost::asio::io_service _io_service;</span><br><span class="line"><span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> devname = <span class="string">"COM3"</span>;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">boost::asio::<span class="function">serial_port <span class="title">serial</span><span class="params">(_io_service)</span></span>;</span><br><span class="line">serial.open(devname);<span class="comment">// throw error every times.</span></span><br><span class="line"><span class="keyword">if</span> (serial.is_open()) &#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; devname &lt;&lt; <span class="string">" serial open successed."</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; devname &lt;&lt; <span class="string">" serial open failed!"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (<span class="keyword">const</span> <span class="built_in">std</span>::exception&amp; ex)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; ex.what() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;<span class="comment">// GetLastError() == 87</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>每次都会出现错误87。即 GetLastError() 的结果为 87<br>于是跟进代码里面调试追到了 <em>win_iocp_serial_port_service::open</em> 函数里</p><p><strong>win_iocp_serial_port_service::open</strong> 函数的实现如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">boost::system::error_code win_iocp_serial_port_service::open(</span><br><span class="line">win_iocp_serial_port_service::implementation_type&amp; impl,</span><br><span class="line"><span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; device, boost::system::error_code&amp; ec)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (is_open(impl))</span><br><span class="line">&#123;</span><br><span class="line">ec = boost::asio::error::already_open;</span><br><span class="line"><span class="keyword">return</span> ec;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> name = (device[<span class="number">0</span>] == <span class="string">'\\'</span>) ? device : <span class="string">"\\\\.\\"</span> + device;</span><br><span class="line"></span><br><span class="line">::HANDLE handle = ::CreateFileA(name.c_str(),</span><br><span class="line">GENERIC_READ | GENERIC_WRITE, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">OPEN_EXISTING, FILE_FLAG_OVERLAPPED, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (handle == INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line">DWORD last_error = ::GetLastError();</span><br><span class="line">ec = boost::system::error_code(last_error,</span><br><span class="line">boost::asio::error::get_system_category());</span><br><span class="line"><span class="keyword">return</span> ec;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">::DCB dcb;</span><br><span class="line"><span class="built_in">memset</span>(&amp;dcb, <span class="number">0</span>, <span class="keyword">sizeof</span>(DCB));</span><br><span class="line">dcb.DCBlength = <span class="keyword">sizeof</span>(DCB);</span><br><span class="line"><span class="keyword">if</span> (!::GetCommState(handle, &amp;dcb))</span><br><span class="line">&#123;</span><br><span class="line">DWORD last_error = ::GetLastError();</span><br><span class="line">::CloseHandle(handle);</span><br><span class="line">ec = boost::system::error_code(last_error,</span><br><span class="line">boost::asio::error::get_system_category());</span><br><span class="line"><span class="keyword">return</span> ec;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dcb.fBinary = TRUE;</span><br><span class="line">dcb.fDsrSensitivity = FALSE;</span><br><span class="line">dcb.fNull = FALSE;</span><br><span class="line">dcb.fAbortOnError = FALSE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!::SetCommState(handle, &amp;dcb))</span><br><span class="line">&#123;</span><br><span class="line">DWORD last_error = ::GetLastError();<span class="comment">// lee: error is here!!!</span></span><br><span class="line">::CloseHandle(handle);</span><br><span class="line">ec = boost::system::error_code(last_error,</span><br><span class="line">boost::asio::error::get_system_category());</span><br><span class="line"><span class="keyword">return</span> ec;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::COMMTIMEOUTS timeouts;</span><br><span class="line">timeouts.ReadIntervalTimeout = <span class="number">1</span>;</span><br><span class="line">timeouts.ReadTotalTimeoutMultiplier = <span class="number">0</span>;</span><br><span class="line">timeouts.ReadTotalTimeoutConstant = <span class="number">0</span>;</span><br><span class="line">timeouts.WriteTotalTimeoutMultiplier = <span class="number">0</span>;</span><br><span class="line">timeouts.WriteTotalTimeoutConstant = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (!::SetCommTimeouts(handle, &amp;timeouts))</span><br><span class="line">&#123;</span><br><span class="line">DWORD last_error = ::GetLastError();</span><br><span class="line">::CloseHandle(handle);</span><br><span class="line">ec = boost::system::error_code(last_error,</span><br><span class="line">boost::asio::error::get_system_category());</span><br><span class="line"><span class="keyword">return</span> ec;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (handle_service_.assign(impl, handle, ec))</span><br><span class="line">::CloseHandle(handle);</span><br><span class="line"><span class="keyword">return</span> ec;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>发现每次在第一次 SetCommState 的时候总是会报错并离开。<br>于是查看了前面通过 GetCommState 获取到的 dcb 的值。<br>发现 dcb.BaudRate == 0 时无法 SetCommState 成功<br>也就是说在有些设备中获取不到 dcb.BaudRate 这个值。</p><h1 id="下面是我自己的解决办法"><a href="#下面是我自己的解决办法" class="headerlink" title="下面是我自己的解决办法"></a>下面是我自己的解决办法</h1><p>在 win_iocp_serial_port_service.ipp 文件的88行左右添加<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (dcb.BaudRate == <span class="number">0</span>) dcb.BaudRate = <span class="number">115200</span>;</span><br></pre></td></tr></table></figure></p><p>修改后的 win_iocp_serial_port_service::open 函数完整代码如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">boost::system::error_code win_iocp_serial_port_service::open(</span><br><span class="line">win_iocp_serial_port_service::implementation_type&amp; impl,</span><br><span class="line"><span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; device, boost::system::error_code&amp; ec)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (is_open(impl))</span><br><span class="line">&#123;</span><br><span class="line">ec = boost::asio::error::already_open;</span><br><span class="line"><span class="keyword">return</span> ec;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> name = (device[<span class="number">0</span>] == <span class="string">'\\'</span>) ? device : <span class="string">"\\\\.\\"</span> + device;</span><br><span class="line"></span><br><span class="line">::HANDLE handle = ::CreateFileA(name.c_str(),</span><br><span class="line">GENERIC_READ | GENERIC_WRITE, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">OPEN_EXISTING, FILE_FLAG_OVERLAPPED, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (handle == INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line">DWORD last_error = ::GetLastError();</span><br><span class="line">ec = boost::system::error_code(last_error,</span><br><span class="line">boost::asio::error::get_system_category());</span><br><span class="line"><span class="keyword">return</span> ec;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">::DCB dcb;</span><br><span class="line"><span class="built_in">memset</span>(&amp;dcb, <span class="number">0</span>, <span class="keyword">sizeof</span>(DCB));</span><br><span class="line">dcb.DCBlength = <span class="keyword">sizeof</span>(DCB);</span><br><span class="line"><span class="keyword">if</span> (!::GetCommState(handle, &amp;dcb))</span><br><span class="line">&#123;</span><br><span class="line">DWORD last_error = ::GetLastError();</span><br><span class="line">::CloseHandle(handle);</span><br><span class="line">ec = boost::system::error_code(last_error,</span><br><span class="line">boost::asio::error::get_system_category());</span><br><span class="line"><span class="keyword">return</span> ec;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dcb.fBinary = TRUE;</span><br><span class="line">dcb.fDsrSensitivity = FALSE;</span><br><span class="line">dcb.fNull = FALSE;</span><br><span class="line">dcb.fAbortOnError = FALSE;</span><br><span class="line"><span class="keyword">if</span> (dcb.BaudRate == <span class="number">0</span>) dcb.BaudRate = <span class="number">115200</span>; <span class="comment">// add lee 2015.10.10. 解决dcb.BaudRate为0时无法成功SetCommState的BUG</span></span><br><span class="line"><span class="keyword">if</span> (!::SetCommState(handle, &amp;dcb))</span><br><span class="line">&#123;</span><br><span class="line">DWORD last_error = ::GetLastError();</span><br><span class="line">::CloseHandle(handle);</span><br><span class="line">ec = boost::system::error_code(last_error,</span><br><span class="line">boost::asio::error::get_system_category());</span><br><span class="line"><span class="keyword">return</span> ec;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::COMMTIMEOUTS timeouts;</span><br><span class="line">timeouts.ReadIntervalTimeout = <span class="number">1</span>;</span><br><span class="line">timeouts.ReadTotalTimeoutMultiplier = <span class="number">0</span>;</span><br><span class="line">timeouts.ReadTotalTimeoutConstant = <span class="number">0</span>;</span><br><span class="line">timeouts.WriteTotalTimeoutMultiplier = <span class="number">0</span>;</span><br><span class="line">timeouts.WriteTotalTimeoutConstant = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (!::SetCommTimeouts(handle, &amp;timeouts))</span><br><span class="line">&#123;</span><br><span class="line">DWORD last_error = ::GetLastError();</span><br><span class="line">::CloseHandle(handle);</span><br><span class="line">ec = boost::system::error_code(last_error,</span><br><span class="line">boost::asio::error::get_system_category());</span><br><span class="line"><span class="keyword">return</span> ec;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (handle_service_.assign(impl, handle, ec))</span><br><span class="line">::CloseHandle(handle);</span><br><span class="line"><span class="keyword">return</span> ec;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h1><table><thead><tr><th style="text-align:left">说明</th><th style="text-align:left">参数</th></tr></thead><tbody><tr><td style="text-align:left">操作系统</td><td style="text-align:left">Windows10 专业版 x64</td></tr><tr><td style="text-align:left">开发环境</td><td style="text-align:left">Microsoft Visual Studio Community 2013 Version 12.0.40629.00 Update 5</td></tr><tr><td style="text-align:left">Boost版本</td><td style="text-align:left">boost_1.59.0</td></tr></tbody></table><h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>以上只是自己的猜测，并不一定是完全正确的。如有任何错误，请联系并告诉我。我将尽快修改，不胜感激。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在最近写一些串口操作的程序时使用了 &lt;strong&gt;boost::asio::serial_port&lt;/strong&gt; 来操作串口&lt;br&gt;但当尝试打开串口的时候出现了错误。下面是我的测试代码：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;
      
    
    </summary>
    
      <category term="programing" scheme="http://www.leelib.com/categories/programing/"/>
    
    
      <category term="boost" scheme="http://www.leelib.com/tags/boost/"/>
    
      <category term="win10" scheme="http://www.leelib.com/tags/win10/"/>
    
      <category term="asio" scheme="http://www.leelib.com/tags/asio/"/>
    
      <category term="serial_port" scheme="http://www.leelib.com/tags/serial-port/"/>
    
  </entry>
  
  <entry>
    <title>Win10里添加目录右键菜单 VS2013 Command Prompt Here</title>
    <link href="http://www.leelib.com/2015/09/16/vs2013-command-prompt-here.html"/>
    <id>http://www.leelib.com/2015/09/16/vs2013-command-prompt-here.html</id>
    <published>2015-09-15T21:08:21.000Z</published>
    <updated>2018-03-24T05:40:35.319Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>我有时需要在命令行里对某个VS项目目录进行编译或部署等操作，总是需要以下步骤：</p><ol><li>打开VS的Command Prompt</li><li>进入该项目目录</li><li>进行编译操作</li></ol><p>个人觉得这样太浪费时间，于是萌生了添加类似 <strong>Command Here</strong> 右键菜单的想法。<br>办法很简单，在注册表添加相关项就可以了</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="Windows7-添加方法"><a href="#Windows7-添加方法" class="headerlink" title="Windows7 添加方法"></a>Windows7 添加方法</h2><p>将以下内容修改到自己对应VS目录后以文本形式保存到 VS2013-Command-Prompt-Here-win7.reg 文件，然后双击导入即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\VS2013 Command Prompt Here]</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\VS2013 Command Prompt Here\command]</span><br><span class="line">@=&quot;cmd.exe /s /k pushd \&quot;%1\&quot; &amp; \&quot;C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\vcvarsall.bat\&quot; x86&quot;</span><br></pre></td></tr></table></figure></p><h2 id="Windows10-添加方法"><a href="#Windows10-添加方法" class="headerlink" title="Windows10 添加方法"></a>Windows10 添加方法</h2><p>将以下内容修改到自己对应VS目录后以文本形式保存到 VS2013-Command-Prompt-Here-win10.reg 文件，然后双击导入即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\VS2013 Command Prompt Here]</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\VS2013 Command Prompt Here\command]</span><br><span class="line">@=&quot;cmd.exe /s /k pushd \&quot;%V\&quot; &amp; \&quot;C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\vcvarsall.bat\&quot; x86&quot;</span><br></pre></td></tr></table></figure></p><h1 id="为什么区分Windows版本"><a href="#为什么区分Windows版本" class="headerlink" title="为什么区分Windows版本"></a>为什么区分Windows版本</h1><p>因为对于Windows来说传参的方式有所改变<br><strong>pushd %1</strong> 是用于Windows7的<br><strong>pushd %V</strong> 是用于Windows10的</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>for Windows7: <a href="/files/regfiles/VS2013-Command-Prompt-Here-win7.reg">VS2013-Command-Prompt-Here-win7.reg</a><br>for Windows10: <a href="/files/regfiles/VS2013-Command-Prompt-Here-win10.reg">VS2013-Command-Prompt-Here-win10.reg</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h1&gt;&lt;p&gt;我有时需要在命令行里对某个VS项目目录进行编译或部署等操作，总是需要以下步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开VS的Command Prom
      
    
    </summary>
    
      <category term="summarys" scheme="http://www.leelib.com/categories/summarys/"/>
    
    
      <category term="VS2013" scheme="http://www.leelib.com/tags/VS2013/"/>
    
      <category term="Windows10" scheme="http://www.leelib.com/tags/Windows10/"/>
    
  </entry>
  
  <entry>
    <title>VS2013静态编译openssl批处理</title>
    <link href="http://www.leelib.com/2015/09/14/vs2013-build-openssl-static.html"/>
    <id>http://www.leelib.com/2015/09/14/vs2013-build-openssl-static.html</id>
    <published>2015-09-14T05:26:46.000Z</published>
    <updated>2018-03-24T05:40:35.319Z</updated>
    
    <content type="html"><![CDATA[<h1 id="打开-Visual-Studio-2013-Command-Prompt"><a href="#打开-Visual-Studio-2013-Command-Prompt" class="headerlink" title="打开 Visual Studio 2013 Command Prompt"></a>打开 Visual Studio 2013 Command Prompt</h1><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.nasm.us/pub/nasm/releasebuilds/<span class="number">2</span>.<span class="number">11</span>.<span class="number">08</span>/win32/nasm-<span class="number">2</span>.<span class="number">11</span>.<span class="number">08</span>-win32.zip</span><br><span class="line">unzip nasm-<span class="number">2</span>.<span class="number">11</span>.<span class="number">08</span>-win32.zip -d C:/nasm</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">PATH</span>=<span class="variable">%PATH%</span>;C:/nasm/</span><br><span class="line">wget https://www.openssl.org/source/openssl-<span class="number">1</span>.<span class="number">0</span>.<span class="number">2</span>d.tar.gz</span><br><span class="line">tar xzf openssl-<span class="number">1</span>.<span class="number">0</span>.<span class="number">2</span>d.tar.gz</span><br><span class="line"><span class="built_in">cd</span> openssl-<span class="number">1</span>.<span class="number">0</span>.<span class="number">2</span>d</span><br><span class="line">perl configure VC-WIN32 --prefix=C:/openssl</span><br><span class="line">ms\do_nasm</span><br><span class="line">nmake -f ms\nt.mak</span><br><span class="line">nmake -f ms\nt.mak install</span><br><span class="line"><span class="built_in">echo</span> "build successed."</span><br></pre></td></tr></table></figure><p>这样编译不会产生 <strong>error A2070:invalid instruction operands</strong> 这个错误</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;打开-Visual-Studio-2013-Command-Prompt&quot;&gt;&lt;a href=&quot;#打开-Visual-Studio-2013-Command-Prompt&quot; class=&quot;headerlink&quot; title=&quot;打开 Visual Studio 201
      
    
    </summary>
    
      <category term="programing" scheme="http://www.leelib.com/categories/programing/"/>
    
    
      <category term="nasm" scheme="http://www.leelib.com/tags/nasm/"/>
    
      <category term="openssl" scheme="http://www.leelib.com/tags/openssl/"/>
    
      <category term="A2070" scheme="http://www.leelib.com/tags/A2070/"/>
    
      <category term="nmake" scheme="http://www.leelib.com/tags/nmake/"/>
    
      <category term="perl" scheme="http://www.leelib.com/tags/perl/"/>
    
  </entry>
  
  <entry>
    <title>好玩的暴雪战网错误提示</title>
    <link href="http://www.leelib.com/2015/08/05/fun-battle-net-client-error.html"/>
    <id>http://www.leelib.com/2015/08/05/fun-battle-net-client-error.html</id>
    <published>2015-08-05T15:08:24.000Z</published>
    <updated>2018-03-24T05:40:35.305Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/20150805/battle-net-error.jpg" alt=""></p><p>可能是网络或者其他原因引起的。但没想到暴雪竟然会萌萌的掀桌子 0.0///</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/20150805/battle-net-error.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;可能是网络或者其他原因引起的。但没想到暴雪竟然会萌萌的掀桌子 0.0///&lt;/p&gt;

      
    
    </summary>
    
      <category term="interesting" scheme="http://www.leelib.com/categories/interesting/"/>
    
    
  </entry>
  
  <entry>
    <title>VS里std::max和max宏混淆问题的解决方案</title>
    <link href="http://www.leelib.com/2015/02/09/fix-std-max-error.html"/>
    <id>http://www.leelib.com/2015/02/09/fix-std-max-error.html</id>
    <published>2015-02-09T04:27:16.000Z</published>
    <updated>2018-03-24T05:40:35.301Z</updated>
    
    <content type="html"><![CDATA[<p>有时,把旧项目转换成新版本项目时,旧版本项目里使用的 <strong>max</strong> 和 <strong>min</strong> 宏无法在新版本中正常编译.</p><p>原因是: 新版本内有了新的函数 <strong>std::max</strong> 和 <strong>std::min</strong> 函数来实现这一功能</p><h4 id="这时可以尝试使用如下方案解决"><a href="#这时可以尝试使用如下方案解决" class="headerlink" title="这时可以尝试使用如下方案解决:"></a>这时可以尝试使用如下方案解决:</h4><ol><li><p>包含algorithm文件</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>明确使用 <strong>std::max(a,b)</strong> 而非 <strong>max(a,b)</strong></p></li><li>定义宏 NOMINMAX<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NOMINMAX</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有时,把旧项目转换成新版本项目时,旧版本项目里使用的 &lt;strong&gt;max&lt;/strong&gt; 和 &lt;strong&gt;min&lt;/strong&gt; 宏无法在新版本中正常编译.&lt;/p&gt;
&lt;p&gt;原因是: 新版本内有了新的函数 &lt;strong&gt;std::max&lt;/strong&gt; 和 &lt;
      
    
    </summary>
    
      <category term="programing" scheme="http://www.leelib.com/categories/programing/"/>
    
    
      <category term="algorithm" scheme="http://www.leelib.com/tags/algorithm/"/>
    
      <category term="max" scheme="http://www.leelib.com/tags/max/"/>
    
      <category term="min" scheme="http://www.leelib.com/tags/min/"/>
    
      <category term="std" scheme="http://www.leelib.com/tags/std/"/>
    
  </entry>
  
  <entry>
    <title>Windows下的DLL卸载本身模块的方法</title>
    <link href="http://www.leelib.com/2015/01/16/windows-dll-freelibrary-self.html"/>
    <id>http://www.leelib.com/2015/01/16/windows-dll-freelibrary-self.html</id>
    <published>2015-01-15T18:35:37.000Z</published>
    <updated>2018-03-24T05:40:35.322Z</updated>
    
    <content type="html"><![CDATA[<p>在 Windows 里 DLL 卸载自身模块是无法通过字节调用 FreeLibrary 自己来实现的。</p><h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><blockquote><p>在当前线程中调用 FreeLibrary 后，当前模块就会立即被释放掉，而当前线程还没有运行结束。所以程序就运行到了一块不可访问的内存里，产生异常从而导致程序崩溃。</p></blockquote><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><blockquote><p>Windows 里面 提供了一条可以用来释放自身模块的函数 <strong>FreeLibraryAndExitThread</strong> 可以释放自身。</p></blockquote><p>函数</p><pre><code>VOID WINAPI FreeLibraryAndExitThread(_In_ HMODULE hLibModule, _In_ DWORD dwExitCode)</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在 Windows 里 DLL 卸载自身模块是无法通过字节调用 FreeLibrary 自己来实现的。&lt;/p&gt;
&lt;h2 id=&quot;原因分析&quot;&gt;&lt;a href=&quot;#原因分析&quot; class=&quot;headerlink&quot; title=&quot;原因分析&quot;&gt;&lt;/a&gt;原因分析&lt;/h2&gt;&lt;block
      
    
    </summary>
    
      <category term="programing" scheme="http://www.leelib.com/categories/programing/"/>
    
    
      <category term="windows" scheme="http://www.leelib.com/tags/windows/"/>
    
      <category term="dll" scheme="http://www.leelib.com/tags/dll/"/>
    
      <category term="FreeLibrary" scheme="http://www.leelib.com/tags/FreeLibrary/"/>
    
      <category term="FreeLibraryAndExitThread" scheme="http://www.leelib.com/tags/FreeLibraryAndExitThread/"/>
    
  </entry>
  
  <entry>
    <title>Linux里面查看登录日志，并统计次数和排序，查看尝试破解密码的IP</title>
    <link href="http://www.leelib.com/2015/01/06/linux-auth-log.html"/>
    <id>http://www.leelib.com/2015/01/06/linux-auth-log.html</id>
    <published>2015-01-06T06:42:53.000Z</published>
    <updated>2018-03-24T05:40:35.310Z</updated>
    
    <content type="html"><![CDATA[<p>仅需一条命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">"Failed password for root"</span> /var/<span class="built_in">log</span>/secure | awk <span class="string">'&#123;print $11&#125;'</span> | sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure></p><p>结果类似下面这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">4377 103.41.124.18</span><br><span class="line">4368 103.41.124.65</span><br><span class="line">3900 62.210.178.226</span><br><span class="line">2214 103.41.124.33</span><br><span class="line"> 409 62.210.142.105</span><br><span class="line"> 404 115.231.222.45</span><br><span class="line"> 152 122.225.97.91</span><br><span class="line">  95 122.225.109.205</span><br><span class="line">  81 109.195.69.233</span><br><span class="line">  42 74.52.105.154</span><br><span class="line">  21 87.106.184.62</span><br><span class="line">  21 87.106.1.211</span><br><span class="line">  21 82.165.154.23</span><br><span class="line">  21 69.64.64.62</span><br><span class="line">  21 67.226.156.239</span><br><span class="line">  21 61.40.192.52</span><br><span class="line">  21 60.213.190.98</span><br><span class="line">  21 27.251.179.130</span><br><span class="line">  21 222.77.190.33</span><br><span class="line">  21 211.172.219.251</span><br><span class="line">  21 210.249.105.10</span><br><span class="line">  15 220.194.46.36</span><br><span class="line">  12 203.184.128.106</span><br><span class="line">   1 60.190.71.52</span><br><span class="line">   1 193.104.41.58</span><br></pre></td></tr></table></figure></p><p>这样我们就可以很清楚的了解有谁在尝试破解我们的密码了，之后做个相关安全策略就可以简单防治了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;仅需一条命令&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;p
      
    
    </summary>
    
      <category term="linux" scheme="http://www.leelib.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://www.leelib.com/tags/linux/"/>
    
      <category term="awk" scheme="http://www.leelib.com/tags/awk/"/>
    
      <category term="grep" scheme="http://www.leelib.com/tags/grep/"/>
    
      <category term="secure" scheme="http://www.leelib.com/tags/secure/"/>
    
      <category term="sort" scheme="http://www.leelib.com/tags/sort/"/>
    
      <category term="uniq" scheme="http://www.leelib.com/tags/uniq/"/>
    
  </entry>
  
  <entry>
    <title>Linux里Git出现fatal: Unable to find remote helper for &#39;https&#39;的解决方案</title>
    <link href="http://www.leelib.com/2014/12/30/linux-git-remote-helper-for-https.html"/>
    <id>http://www.leelib.com/2014/12/30/linux-git-remote-helper-for-https.html</id>
    <published>2014-12-30T16:42:43.000Z</published>
    <updated>2018-03-24T05:40:35.310Z</updated>
    
    <content type="html"><![CDATA[<p>在Linux内源码编译安装的Git如果出现了 “<strong>Unable to find remote helper for ‘https’</strong>” 错误，则说明<strong>编译的时候没有发现系统有openssl开发包</strong>。</p><p>解决办法就是在编译之前安装相关的开发包就可以了。</p><h1 id="在CentOS系统中使用下面命令来安装"><a href="#在CentOS系统中使用下面命令来安装" class="headerlink" title="在CentOS系统中使用下面命令来安装"></a>在CentOS系统中使用下面命令来安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在Linux内源码编译安装的Git如果出现了 “&lt;strong&gt;Unable to find remote helper for ‘https’&lt;/strong&gt;” 错误，则说明&lt;strong&gt;编译的时候没有发现系统有openssl开发包&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
      <category term="linux" scheme="http://www.leelib.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://www.leelib.com/tags/linux/"/>
    
      <category term="git" scheme="http://www.leelib.com/tags/git/"/>
    
      <category term="https" scheme="http://www.leelib.com/tags/https/"/>
    
      <category term="fatal" scheme="http://www.leelib.com/tags/fatal/"/>
    
  </entry>
  
  <entry>
    <title>Windows里Git出现fatal: Unable to find remote helper for &#39;https&#39;的解决方案</title>
    <link href="http://www.leelib.com/2014/12/25/git-remote-helper-for-https.html"/>
    <id>http://www.leelib.com/2014/12/25/git-remote-helper-for-https.html</id>
    <published>2014-12-25T09:10:02.000Z</published>
    <updated>2018-03-24T05:40:35.307Z</updated>
    
    <content type="html"><![CDATA[<p>在升级win8.1之后，重新安装的Git虽然可以正常使用<br>但遇到https时会报“<strong>Unable to find remote helper for ‘https’</strong>”的错误</p><p>网络搜索了许久未果，于是自己研究</p><blockquote><ol><li>检查安装的文件<br>结果：所有文件均完整<p></p></li><li><p>检查文件的访问权限<br>结果：所有文件当前用户均可访问</p></li><li><p>为调用的git等exe文件授予管理员运行权限<br>结果：问题依旧存在</p></li></ol></blockquote><p></p><p>按理说，只要当前用户拥有文件的所有访问权限，就可以正常使用了。<br>并且，按这个错误来分析。应该是remote-https模块没有权限访问</p><p>挣扎了半天，尝试重装解决。</p><p>在重装的时候选择了 <strong>管理员权限运行</strong><br>结果意外的发现重装后，https可以正常使用了。</p><p>至此问题解决。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在升级win8.1之后，重新安装的Git虽然可以正常使用&lt;br&gt;但遇到https时会报“&lt;strong&gt;Unable to find remote helper for ‘https’&lt;/strong&gt;”的错误&lt;/p&gt;
&lt;p&gt;网络搜索了许久未果，于是自己研究&lt;/p&gt;
&lt;bl
      
    
    </summary>
    
      <category term="summarys" scheme="http://www.leelib.com/categories/summarys/"/>
    
    
      <category term="git" scheme="http://www.leelib.com/tags/git/"/>
    
      <category term="https" scheme="http://www.leelib.com/tags/https/"/>
    
      <category term="remote" scheme="http://www.leelib.com/tags/remote/"/>
    
      <category term="windows" scheme="http://www.leelib.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>python代码简单加密解密工具</title>
    <link href="http://www.leelib.com/2014/11/21/python-simple-crypt-code.html"/>
    <id>http://www.leelib.com/2014/11/21/python-simple-crypt-code.html</id>
    <published>2014-11-21T12:13:45.000Z</published>
    <updated>2018-03-24T05:40:35.313Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/env python</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">:license: MIT</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Copyright (C) 2012 HustMoon</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Permission is hereby granted, free of charge, to any person obtaining a copy of</span></span><br><span class="line"><span class="string">this software and associated documentation files (the "Software"), to deal in</span></span><br><span class="line"><span class="string">the Software without restriction, including without limitation the rights to</span></span><br><span class="line"><span class="string">use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies</span></span><br><span class="line"><span class="string">of the Software, and to permit persons to whom the Software is furnished to do</span></span><br><span class="line"><span class="string">so, subject to the following conditions:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The above copyright notice and this permission notice shall be included in all</span></span><br><span class="line"><span class="string">copies or substantial portions of the Software.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></span><br><span class="line"><span class="string">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></span><br><span class="line"><span class="string">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></span><br><span class="line"><span class="string">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></span><br><span class="line"><span class="string">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></span><br><span class="line"><span class="string">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></span><br><span class="line"><span class="string">SOFTWARE.</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> with_statement</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> zlib, sys</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">b128encode</span><span class="params">(buf, escape=False)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> buf: <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">    buf = bytearray(buf)</span><br><span class="line">    res = bytearray((len(buf) * <span class="number">8</span> + <span class="number">6</span>) / <span class="number">7</span>)</span><br><span class="line">    p, s, i = <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> buf:</span><br><span class="line">        res[i] = ((p &lt;&lt; (<span class="number">8</span> - s) | (n &gt;&gt; s)) &amp;amp; <span class="number">0x7F</span>) | <span class="number">0x80</span>; i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> s == <span class="number">7</span>:</span><br><span class="line">            res[i] = n | <span class="number">0x80</span>; i += <span class="number">1</span></span><br><span class="line">            p, s = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            p, s = n, (s + <span class="number">1</span>) % <span class="number">8</span></span><br><span class="line">    <span class="keyword">if</span> s != <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">if</span> s == <span class="number">2</span> <span class="keyword">and</span> p &lt; <span class="number">0x80</span>:</span><br><span class="line">            i -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            p = (p &lt;&lt; (<span class="number">8</span> - s)) &amp;amp; <span class="number">0x7F</span></span><br><span class="line">        p = chr(p)</span><br><span class="line">        <span class="keyword">if</span> escape:</span><br><span class="line">            p = p.encode(<span class="string">'string-escape'</span>)</span><br><span class="line">        res[i:] = p</span><br><span class="line">    <span class="keyword">return</span> str(res)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dcode</span><span class="params">()</span>:</span></span><br><span class="line">    code = <span class="string">r'''def code(__=code):</span></span><br><span class="line"><span class="string"> (_______)=(globals)();del((_______)['code'])</span></span><br><span class="line"><span class="string"> if(((_______).get('__doc__'))is((None))):</span></span><br><span class="line"><span class="string">  (__)=(map)((ord),(__)[(339):]);(______)=[0]*(((((len)((__))+(1))*(7))/(8)));((___),(____),(_____))=((0),(0),(0))</span></span><br><span class="line"><span class="string">  for((__))in((__)):</span></span><br><span class="line"><span class="string">   if((__)&lt;(128)):break</span></span><br><span class="line"><span class="string">   if((____)==(0)):((___),(____))=((__),(1))</span></span><br><span class="line"><span class="string">   else:</span></span><br><span class="line"><span class="string">    (______)[(_____)]=((((___)&lt;&lt;(____))|(((__)&amp;amp;(127))&gt;&gt;((7)-(____))))&amp;amp;(255));(_____)+=(1);((___),(____))=((__),(((____)+(1))%(8)))</span></span><br><span class="line"><span class="string">  if((__)&lt;(128)):</span></span><br><span class="line"><span class="string">   if((____)!=(0)):</span></span><br><span class="line"><span class="string">    (__)=((((___)&lt;&lt;(____))|((__)&gt;&gt;((7)-(____))))&amp;amp;(255))</span></span><br><span class="line"><span class="string">   (______)[(_____):]=[((__))]</span></span><br><span class="line"><span class="string">  elif((____)!=(0)):del((______)[(_____):])</span></span><br><span class="line"><span class="string">  exec((''.join((map)((chr),(______))).decode('zlib')))in((_______))</span></span><br><span class="line"><span class="string">  if(((_______).get('__doc__'))is((None))):(_______)['__doc__']=''</span></span><br><span class="line"><span class="string">code()</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join([c.encode(<span class="string">'string-escape'</span>) <span class="keyword">if</span> ord(c) &lt; <span class="number">128</span> <span class="keyword">else</span> c</span><br><span class="line">                    <span class="keyword">for</span> c <span class="keyword">in</span> zlib.compress(code, <span class="number">9</span>)])</span><br><span class="line">dcode = dcode()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span><span class="params">(infile, outfile)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(infile, <span class="string">'rU'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        code = fp.read().rstrip(<span class="string">'n'</span>) + <span class="string">'n'</span></span><br><span class="line">    code = b128encode(zlib.compress(code, <span class="number">9</span>), <span class="keyword">True</span>)</span><br><span class="line">    code = <span class="string">r'''# -*- coding: latin-1 -*-</span></span><br><span class="line"><span class="string">code = '%s'</span></span><br><span class="line"><span class="string">exec(code.decode('zlib'))</span></span><br><span class="line"><span class="string">'''</span> % (dcode + code)</span><br><span class="line">    <span class="keyword">with</span> open(outfile, <span class="string">'wb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        fp.write(code)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span><span class="params">(infile, outfile)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(infile, <span class="string">'rU'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        code = fp.read().rstrip(<span class="string">'n'</span>) + <span class="string">'n'</span></span><br><span class="line">    code = code.replace(<span class="string">"exec(code.decode('zlib'))"</span>, <span class="string">"exec(code.decode('zlib')"</span></span><br><span class="line">        <span class="string">".replace('exec','fp.write').replace('in((_______))',''))"</span>)</span><br><span class="line">    <span class="keyword">with</span> open(outfile, <span class="string">'wb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        eval(compile(code, <span class="string">'s'</span>, <span class="string">'exec'</span>), &#123;<span class="string">'fp'</span>:fp&#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> sys.argv[<span class="number">1</span>] == <span class="string">'-d'</span>:</span><br><span class="line">            func = decode</span><br><span class="line">            infile, outfile = sys.argv[<span class="number">2</span>:<span class="number">4</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            func = encode</span><br><span class="line">            infile, outfile = sys.argv[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="keyword">print</span> &gt;&gt;sys.stderr, <span class="string">'Usage: zipcode.py [-d] infile.py outfile.py'</span></span><br><span class="line">        <span class="keyword">raise</span> SystemExit(<span class="number">-1</span>)</span><br><span class="line">    func(infile, outfile)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
      <category term="programing" scheme="http://www.leelib.com/categories/programing/"/>
    
    
  </entry>
  
  <entry>
    <title>VS2013上直接使用ATL的注意事项</title>
    <link href="http://www.leelib.com/2014/11/21/vs2013-use-atl.html"/>
    <id>http://www.leelib.com/2014/11/21/vs2013-use-atl.html</id>
    <published>2014-11-21T05:15:21.000Z</published>
    <updated>2018-03-24T05:40:35.320Z</updated>
    
    <content type="html"><![CDATA[<h3 id="不再需要导入atl-lib库了，直接包含以下头文件就可以了"><a href="#不再需要导入atl-lib库了，直接包含以下头文件就可以了" class="headerlink" title="不再需要导入atl.lib库了，直接包含以下头文件就可以了"></a>不再需要导入atl.lib库了，直接包含以下头文件就可以了</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;atlbase.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;atlcom.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;atlctl.h&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="要使用-AtlAxAttachControl-等函数的话，则必须初始化ATL模块"><a href="#要使用-AtlAxAttachControl-等函数的话，则必须初始化ATL模块" class="headerlink" title="要使用 AtlAxAttachControl 等函数的话，则必须初始化ATL模块"></a>要使用 AtlAxAttachControl 等函数的话，则必须初始化ATL模块</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CComModule _Module;</span><br><span class="line">_pAtlModule = &amp;amp;_Module;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;不再需要导入atl-lib库了，直接包含以下头文件就可以了&quot;&gt;&lt;a href=&quot;#不再需要导入atl-lib库了，直接包含以下头文件就可以了&quot; class=&quot;headerlink&quot; title=&quot;不再需要导入atl.lib库了，直接包含以下头文件就可以了&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="programing" scheme="http://www.leelib.com/categories/programing/"/>
    
    
      <category term="atl" scheme="http://www.leelib.com/tags/atl/"/>
    
      <category term="com" scheme="http://www.leelib.com/tags/com/"/>
    
  </entry>
  
  <entry>
    <title>CentOS安装GO编译环境</title>
    <link href="http://www.leelib.com/2014/11/01/centos-install-go.html"/>
    <id>http://www.leelib.com/2014/11/01/centos-install-go.html</id>
    <published>2014-11-01T01:42:17.000Z</published>
    <updated>2018-03-24T05:40:35.293Z</updated>
    
    <content type="html"><![CDATA[<p>我们这里使用源码编译安装，直接按顺序执行下列命令就可以成功(我都是假设已经有root权限的情况下，所以执行之前请确认自己已有root权限)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">yum install -y mercurial gcc-c++ gcc</span><br><span class="line">mkdir /usr/<span class="built_in">local</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">hg <span class="built_in">clone</span> -r release https://go.googlecode.com/hg/ go</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/go/src</span><br><span class="line">chmox +x all.bash</span><br><span class="line">./all.bash</span><br><span class="line">mkdir /root/go</span><br><span class="line"><span class="built_in">export</span> GOROOT=/usr/<span class="built_in">local</span>/go</span><br><span class="line"><span class="built_in">export</span> GOPATH=/root/go</span><br><span class="line"><span class="built_in">export</span> GOBIN=/usr/<span class="built_in">local</span>/go/bin</span><br><span class="line"><span class="built_in">export</span> GOOS=linux</span><br><span class="line"><span class="built_in">export</span> PATH=.:<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/go/bin</span><br></pre></td></tr></table></figure><p>现在应该已经可以执行go命令测试了：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@root]<span class="comment"># go version</span></span><br><span class="line">go version go1.3.3 linux/amd64</span><br></pre></td></tr></table></figure></p><p>如果想要每次进入bash时都拥有go环境，则需要新建一个文件：<strong>/etc/profile.d/go.sh</strong> 并写入以下内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GOROOT=/usr/<span class="built_in">local</span>/go</span><br><span class="line"><span class="built_in">export</span> GOPATH=/root/go</span><br><span class="line"><span class="built_in">export</span> GOBIN=/usr/<span class="built_in">local</span>/go/bin</span><br><span class="line"><span class="built_in">export</span> GOOS=linux</span><br><span class="line"><span class="built_in">export</span> PATH=.:<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/go/bin</span><br></pre></td></tr></table></figure></p><p>现在随时都可以执行go命令了。</p><p>:)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我们这里使用源码编译安装，直接按顺序执行下列命令就可以成功(我都是假设已经有root权限的情况下，所以执行之前请确认自己已有root权限)：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="linux" scheme="http://www.leelib.com/categories/linux/"/>
    
    
      <category term="bash" scheme="http://www.leelib.com/tags/bash/"/>
    
      <category term="centos" scheme="http://www.leelib.com/tags/centos/"/>
    
      <category term="export" scheme="http://www.leelib.com/tags/export/"/>
    
      <category term="go" scheme="http://www.leelib.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>让CentOS的yum命令可以直接安装最新的nginx</title>
    <link href="http://www.leelib.com/2014/10/31/yum-install-last-nginx.html"/>
    <id>http://www.leelib.com/2014/10/31/yum-install-last-nginx.html</id>
    <published>2014-10-31T15:46:53.000Z</published>
    <updated>2018-03-24T05:40:35.323Z</updated>
    
    <content type="html"><![CDATA[<h1 id="添加nginx的repo"><a href="#添加nginx的repo" class="headerlink" title="添加nginx的repo"></a>添加nginx的repo</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'[nginx]</span></span><br><span class="line"><span class="string">name=nginx repo</span></span><br><span class="line"><span class="string">baseurl=http://nginx.org/packages/centos/7/x86_64</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br><span class="line"><span class="string">enabled=1'</span> &gt; /etc/yum.repos.d/nginx.repo</span><br></pre></td></tr></table></figure><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br><span class="line">yum install nginx</span><br></pre></td></tr></table></figure><p>是不是直接安装了最新版的nginx呢<br> ( ͡° ͜ʖ ͡°) </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;添加nginx的repo&quot;&gt;&lt;a href=&quot;#添加nginx的repo&quot; class=&quot;headerlink&quot; title=&quot;添加nginx的repo&quot;&gt;&lt;/a&gt;添加nginx的repo&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;t
      
    
    </summary>
    
      <category term="linux" scheme="http://www.leelib.com/categories/linux/"/>
    
    
      <category term="yum" scheme="http://www.leelib.com/tags/yum/"/>
    
      <category term="nginx" scheme="http://www.leelib.com/tags/nginx/"/>
    
      <category term="repos" scheme="http://www.leelib.com/tags/repos/"/>
    
  </entry>
  
  <entry>
    <title>解决yum安装 openssl-devel时产生的Multilib version problems found错误</title>
    <link href="http://www.leelib.com/2014/06/29/fix-yum-openssl-devel-multilib-version-problems-found.html"/>
    <id>http://www.leelib.com/2014/06/29/fix-yum-openssl-devel-multilib-version-problems-found.html</id>
    <published>2014-06-28T23:56:31.000Z</published>
    <updated>2018-03-24T05:40:35.304Z</updated>
    
    <content type="html"><![CDATA[<p>今天给一台CentOS系统安装openssl-devel时，出现了如下信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">[root@centos]<span class="comment"># yum install -y openssl-devel</span></span><br><span class="line">Loaded plugins: fastestmirror, security</span><br><span class="line">Repository updates is listed more than once <span class="keyword">in</span> the configuration</span><br><span class="line">Repository centosplus is listed more than once <span class="keyword">in</span> the configuration</span><br><span class="line">Repository contrib is listed more than once <span class="keyword">in</span> the configuration</span><br><span class="line">Repository extras is listed more than once <span class="keyword">in</span> the configuration</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.tuna.tsinghua.edu.cn</span><br><span class="line"> * extras: mirrors.tuna.tsinghua.edu.cn</span><br><span class="line"> * updates: mirrors.tuna.tsinghua.edu.cn</span><br><span class="line">Setting up Install Process</span><br><span class="line">Resolving Dependencies</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package openssl-devel.x86_64 0:1.0.1e-16.el6_5.14 will be installed</span><br><span class="line">--&gt; Processing Dependency: krb5-devel <span class="keyword">for</span> package: openssl-devel-1.0.1e-16.el6_5.14.x86_64</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package krb5-devel.x86_64 0:1.10.3-15.el6_5.1 will be installed</span><br><span class="line">--&gt; Processing Dependency: libselinux-devel <span class="keyword">for</span> package: krb5-devel-1.10.3-15.el6_5.1.x86_64</span><br><span class="line">--&gt; Processing Dependency: libcom_err-devel <span class="keyword">for</span> package: krb5-devel-1.10.3-15.el6_5.1.x86_64</span><br><span class="line">--&gt; Processing Dependency: keyutils-libs-devel <span class="keyword">for</span> package: krb5-devel-1.10.3-15.el6_5.1.x86_64</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package keyutils-libs-devel.x86_64 0:1.4-4.el6 will be installed</span><br><span class="line">---&gt; Package libcom_err-devel.x86_64 0:1.41.12-18.el6 will be installed</span><br><span class="line">---&gt; Package libselinux-devel.x86_64 0:2.0.94-5.3.el6_4.1 will be installed</span><br><span class="line">--&gt; Processing Dependency: libselinux = 2.0.94-5.3.el6_4.1 <span class="keyword">for</span> package: libselinux-devel-2.0.94-5.3.el6_4.1.x86_64</span><br><span class="line">--&gt; Processing Dependency: libsepol-devel &gt;= 2.0.32-1 <span class="keyword">for</span> package: libselinux-devel-2.0.94-5.3.el6_4.1.x86_64</span><br><span class="line">--&gt; Processing Dependency: pkgconfig(libsepol) <span class="keyword">for</span> package: libselinux-devel-2.0.94-5.3.el6_4.1.x86_64</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package libselinux.i686 0:2.0.94-5.3.el6_4.1 will be installed</span><br><span class="line">--&gt; Processing Dependency: libdl.so.2(GLIBC_2.1) <span class="keyword">for</span> package: libselinux-2.0.94-5.3.el6_4.1.i686</span><br><span class="line">--&gt; Processing Dependency: libdl.so.2(GLIBC_2.0) <span class="keyword">for</span> package: libselinux-2.0.94-5.3.el6_4.1.i686</span><br><span class="line">--&gt; Processing Dependency: libdl.so.2 <span class="keyword">for</span> package: libselinux-2.0.94-5.3.el6_4.1.i686</span><br><span class="line">--&gt; Processing Dependency: libc.so.6(GLIBC_2.8) <span class="keyword">for</span> package: libselinux-2.0.94-5.3.el6_4.1.i686</span><br><span class="line">--&gt; Processing Dependency: ld-linux.so.2(GLIBC_2.3) <span class="keyword">for</span> package: libselinux-2.0.94-5.3.el6_4.1.i686</span><br><span class="line">--&gt; Processing Dependency: ld-linux.so.2 <span class="keyword">for</span> package: libselinux-2.0.94-5.3.el6_4.1.i686</span><br><span class="line">---&gt; Package libsepol-devel.x86_64 0:2.0.41-4.el6 will be installed</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package glibc.i686 0:2.12-1.132.el6_5.2 will be installed</span><br><span class="line">--&gt; Processing Dependency: libfreebl3.so(NSSRAWHASH_3.12.3) <span class="keyword">for</span> package: glibc-2.12-1.132.el6_5.2.i686</span><br><span class="line">--&gt; Processing Dependency: libfreebl3.so <span class="keyword">for</span> package: glibc-2.12-1.132.el6_5.2.i686</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package nss-softokn-freebl.i686 0:3.14.3-10.el6_5 will be installed</span><br><span class="line">--&gt; Finished Dependency Resolution</span><br><span class="line">Error:  Multilib version problems found. This often means that the root</span><br><span class="line">       cause is something <span class="keyword">else</span> and multilib version checking is just</span><br><span class="line">       pointing out that there is a problem. Eg.:</span><br><span class="line"></span><br><span class="line">         1\. You have an upgrade <span class="keyword">for</span> libselinux <span class="built_in">which</span> is missing some</span><br><span class="line">            dependency that another package requires. Yum is trying to</span><br><span class="line">            solve this by installing an older version of libselinux of the</span><br><span class="line">            different architecture. If you exclude the bad architecture</span><br><span class="line">            yum will tell you what the root cause is (<span class="built_in">which</span> package</span><br><span class="line">            requires what). You can try redoing the upgrade with</span><br><span class="line">            --exclude libselinux.otherarch ... this should give you an error</span><br><span class="line">            message showing the root cause of the problem.</span><br><span class="line"></span><br><span class="line">         2\. You have multiple architectures of libselinux installed, but</span><br><span class="line">            yum can only see an upgrade <span class="keyword">for</span> one of those arcitectures.</span><br><span class="line">            If you don<span class="string">'t want/need both architectures anymore then you</span></span><br><span class="line"><span class="string">            can remove the one with the missing update and everything</span></span><br><span class="line"><span class="string">            will work.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         3\. You have duplicate versions of libselinux installed already.</span></span><br><span class="line"><span class="string">            You can use "yum check" to get yum show these errors.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       ...you can also use --setopt=protected_multilib=false to remove</span></span><br><span class="line"><span class="string">       this checking, however this is almost never the correct thing to</span></span><br><span class="line"><span class="string">       do as something else is very likely to go wrong (often causing</span></span><br><span class="line"><span class="string">       much more problems).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       Protected multilib versions: libselinux-2.0.94-5.3.el6_4.1.i686 != libselinux-2.0.94-5.3.0.1.el6.centos.plus.x86_64</span></span><br><span class="line"><span class="string"> You could try using --skip-broken to work around the problem</span></span><br><span class="line"><span class="string"> You could try running: rpm -Va --nofiles --nodigest</span></span><br></pre></td></tr></table></figure></p><p><strong>最后在一个日文的网站上找到了解决办法：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install --enablerepo=centosplus openssl-devel</span><br></pre></td></tr></table></figure></p><p>参考：<a href="http://blog.urban-theory.net/2014/06/16/openssl-devel-install-fails-on-centos-with-docker" target="_blank" rel="noopener">http://blog.urban-theory.net/2014/06/16/openssl-devel-install-fails-on-centos-with-docker</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天给一台CentOS系统安装openssl-devel时，出现了如下信息：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;b
      
    
    </summary>
    
      <category term="linux" scheme="http://www.leelib.com/categories/linux/"/>
    
    
      <category term="centos" scheme="http://www.leelib.com/tags/centos/"/>
    
      <category term="install" scheme="http://www.leelib.com/tags/install/"/>
    
      <category term="linux" scheme="http://www.leelib.com/tags/linux/"/>
    
      <category term="yum" scheme="http://www.leelib.com/tags/yum/"/>
    
  </entry>
  
  <entry>
    <title>一句话经验</title>
    <link href="http://www.leelib.com/2014/04/08/dmesg-tail.html"/>
    <id>http://www.leelib.com/2014/04/08/dmesg-tail.html</id>
    <published>2014-04-07T17:37:23.000Z</published>
    <updated>2018-03-24T05:40:35.297Z</updated>
    
    <content type="html"><![CDATA[<p>当内核加载失败时，使用以下命令查看出错记录，可以帮助找到问题所在：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmesg | tail -n 30</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;当内核加载失败时，使用以下命令查看出错记录，可以帮助找到问题所在：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/p
      
    
    </summary>
    
      <category term="linux" scheme="http://www.leelib.com/categories/linux/"/>
    
    
      <category term="dmesg" scheme="http://www.leelib.com/tags/dmesg/"/>
    
      <category term="tail" scheme="http://www.leelib.com/tags/tail/"/>
    
  </entry>
  
  <entry>
    <title>升级Linux内核3.8.10记录</title>
    <link href="http://www.leelib.com/2014/04/08/upgrade-linux-kernel-to-3-8-10.html"/>
    <id>http://www.leelib.com/2014/04/08/upgrade-linux-kernel-to-3-8-10.html</id>
    <published>2014-04-07T17:10:19.000Z</published>
    <updated>2018-03-24T05:40:35.317Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum install rpmdevtools yum-utils ncurses-devel make rpm-build rpm-devel</span><br><span class="line">wget https://www.kernel.org/pub/linux/kernel/v3.x/linux-3.8.10.tar.gz</span><br><span class="line">tar xvf linux-3.8.10.tar.gz</span><br><span class="line"><span class="built_in">cd</span> linux-3.8.10</span><br><span class="line">make mrproper <span class="comment"># 第一次可忽略</span></span><br><span class="line">make menuconfig <span class="comment"># 记得保存</span></span><br><span class="line">make</span><br><span class="line">make modules_install</span><br><span class="line">make install</span><br><span class="line">new-kernel-pkg --mkinitrd --depmod --install 3.8.10</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="linux" scheme="http://www.leelib.com/categories/linux/"/>
    
    
      <category term="install" scheme="http://www.leelib.com/tags/install/"/>
    
      <category term="make" scheme="http://www.leelib.com/tags/make/"/>
    
      <category term="kernel" scheme="http://www.leelib.com/tags/kernel/"/>
    
      <category term="upgrade" scheme="http://www.leelib.com/tags/upgrade/"/>
    
      <category term="mrproper" scheme="http://www.leelib.com/tags/mrproper/"/>
    
      <category term="menuconfig" scheme="http://www.leelib.com/tags/menuconfig/"/>
    
  </entry>
  
</feed>
